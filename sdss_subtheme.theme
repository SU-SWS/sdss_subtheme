<?php
/**
 * @file
 * Preprocess functions for SDSS Subtheme.
 */

/**
 * Prepares variables for the html.html.twig template.
 */
function sdss_subtheme_preprocess_html(&$variables) {
  $variables['stanford_basic_path'] = drupal_get_path('theme', 'stanford_basic');
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function sdss_subtheme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (!empty($variables['elements']['#id']) && $variables['elements']['#id'] == 'sdss_subtheme_search') {
    $suggestions[] = 'block__stanford_basic_search';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function sdss_subtheme_preprocess_ds_entity_view(&$variables) {

  // if not running on a paragraph, exit out.
  if (!isset($variables['content']['#paragraph'])) {
    return;
  }

  $paragraph = $variables['content']['#paragraph'];

  // Process Cards
  if ($paragraph->bundle() == 'stanford_card') {
    sdss_subtheme_preprocess_card($variables);
  }

  // Process Banners
  if ($paragraph->bundle() == 'stanford_banner') {
    sdss_subtheme_preprocess_banner($variables);
  }

}

/**
 * Implements hook_preprocess_card().
 */
function sdss_subtheme_preprocess_card(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add border style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_border_style', 'sdss-card-wrapper--border-regular');

  // Add button color style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_button_style', 'sdss-wrapper--button-green');

  $card_info = [];

  // Add card type class to card wrapper. 3rd variable provides the default card type.
  $card_info['card_type'] = $paragraph->getBehaviorSetting('react_paragraphs:card_variant_info', 'card_type', 'sdss-card-wrapper--default');
  $variables['attributes']['class'][] = $card_info['card_type'];

  $imageCount = $paragraph->get('su_card_media')->count();

  // Check for media in a card then set classes.
  if (!$imageCount) {
    return;
  }
}

/**
 * Implements hook_preprocess_banner().
 */
function sdss_subtheme_preprocess_banner(&$variables) {

  $paragraph = $variables['content']['#paragraph'];

  // Add button color style class to card wrapper.
  $variables['attributes']['class'][] = $paragraph->getBehaviorSetting('react_paragraphs:banner_variant_info', 'banner_button_style', 'sdss-wrapper--button-red');
}

/**
 * Implements hook_preprocess_field().
 */
function sdss_subtheme_preprocess_field(&$variables) {

 if ($variables['element']['#field_name'] == 'su_para_row_bgcolor') {
    $su_paragraph_row__bgcolor = $variables['items'][0]['content']['#markup'];
  }
}



